{"ast":null,"code":"var _s = $RefreshSig$();\n\nimport { useContext, useEffect } from 'react';\nimport { ThemeChangeContext } from '../context/themeChangeContext';\n\nconst useTheme = () => {\n  _s();\n\n  const {\n    setDarkTheme\n  } = useContext(ThemeChangeContext);\n\n  const toggleDarkTheme = () => {\n    if (document.body.dataset.theme === 'dark-mode') {\n      localStorage.removeItem('theme');\n      document.body.removeAttribute('data-theme');\n      setDarkTheme(false);\n      return;\n    }\n\n    localStorage.setItem('theme', 'dark-mode');\n    document.body.setAttribute('data-theme', 'dark-mode');\n    setDarkTheme(true);\n  };\n\n  useEffect(() => {\n    const getDarkModeFromLocalStorage = () => {\n      if (localStorage.getItem('theme') === 'dark-mode') {\n        document.body.setAttribute('data-theme', 'dark-mode');\n        setDarkTheme(true);\n      }\n    };\n\n    getDarkModeFromLocalStorage();\n  }, [setDarkTheme]);\n  return {\n    toggleDarkTheme\n  };\n};\n\n_s(useTheme, \"rdgq4hDTPQGN4E63GLhAGW1Sj6Y=\");\n\nexport default useTheme;","map":{"version":3,"sources":["/home/revflash/mayankp291.github.io/src/hooks/useTheme.js"],"names":["useContext","useEffect","ThemeChangeContext","useTheme","setDarkTheme","toggleDarkTheme","document","body","dataset","theme","localStorage","removeItem","removeAttribute","setItem","setAttribute","getDarkModeFromLocalStorage","getItem"],"mappings":";;AAAA,SAASA,UAAT,EAAqBC,SAArB,QAAsC,OAAtC;AAEA,SAASC,kBAAT,QAAmC,+BAAnC;;AAEA,MAAMC,QAAQ,GAAG,MAAM;AAAA;;AACrB,QAAM;AAAEC,IAAAA;AAAF,MAAmBJ,UAAU,CAACE,kBAAD,CAAnC;;AAEA,QAAMG,eAAe,GAAG,MAAM;AAC5B,QAAIC,QAAQ,CAACC,IAAT,CAAcC,OAAd,CAAsBC,KAAtB,KAAgC,WAApC,EAAiD;AAC/CC,MAAAA,YAAY,CAACC,UAAb,CAAwB,OAAxB;AACAL,MAAAA,QAAQ,CAACC,IAAT,CAAcK,eAAd,CAA8B,YAA9B;AACAR,MAAAA,YAAY,CAAC,KAAD,CAAZ;AACA;AACD;;AAEDM,IAAAA,YAAY,CAACG,OAAb,CAAqB,OAArB,EAA8B,WAA9B;AACAP,IAAAA,QAAQ,CAACC,IAAT,CAAcO,YAAd,CAA2B,YAA3B,EAAyC,WAAzC;AACAV,IAAAA,YAAY,CAAC,IAAD,CAAZ;AACD,GAXD;;AAaAH,EAAAA,SAAS,CAAC,MAAM;AACd,UAAMc,2BAA2B,GAAG,MAAM;AACxC,UAAIL,YAAY,CAACM,OAAb,CAAqB,OAArB,MAAkC,WAAtC,EAAmD;AACjDV,QAAAA,QAAQ,CAACC,IAAT,CAAcO,YAAd,CAA2B,YAA3B,EAAyC,WAAzC;AACAV,QAAAA,YAAY,CAAC,IAAD,CAAZ;AACD;AACF,KALD;;AAOAW,IAAAA,2BAA2B;AAC5B,GATQ,EASN,CAACX,YAAD,CATM,CAAT;AAWA,SAAO;AAAEC,IAAAA;AAAF,GAAP;AACD,CA5BD;;GAAMF,Q;;AA8BN,eAAeA,QAAf","sourcesContent":["import { useContext, useEffect } from 'react';\n\nimport { ThemeChangeContext } from '../context/themeChangeContext';\n\nconst useTheme = () => {\n  const { setDarkTheme } = useContext(ThemeChangeContext);\n\n  const toggleDarkTheme = () => {\n    if (document.body.dataset.theme === 'dark-mode') {\n      localStorage.removeItem('theme');\n      document.body.removeAttribute('data-theme');\n      setDarkTheme(false);\n      return;\n    }\n\n    localStorage.setItem('theme', 'dark-mode');\n    document.body.setAttribute('data-theme', 'dark-mode');\n    setDarkTheme(true);\n  };\n\n  useEffect(() => {\n    const getDarkModeFromLocalStorage = () => {\n      if (localStorage.getItem('theme') === 'dark-mode') {\n        document.body.setAttribute('data-theme', 'dark-mode');\n        setDarkTheme(true);\n      }\n    };\n\n    getDarkModeFromLocalStorage();\n  }, [setDarkTheme]);\n\n  return { toggleDarkTheme };\n};\n\nexport default useTheme;\n"]},"metadata":{},"sourceType":"module"}