{"ast":null,"code":"var _s = $RefreshSig$();\n\nimport { LANGUAGE } from '../constants/language';\nimport { LanguageContext } from '../context/languageContext';\nimport i18n from '../lang/i18n';\nimport { useContext } from 'react';\n\nconst useLanguage = () => {\n  _s();\n\n  const {\n    currentLanguage,\n    setCurrentLanguage\n  } = useContext(LanguageContext);\n\n  const changeLanguage = () => {\n    if (i18n.language === LANGUAGE.EN) {\n      i18n.changeLanguage(LANGUAGE.KO);\n      setCurrentLanguage(LANGUAGE.KO);\n      return;\n    }\n\n    if (i18n.language === LANGUAGE.KO) {\n      i18n.changeLanguage(LANGUAGE.EN);\n      setCurrentLanguage(LANGUAGE.EN);\n      return;\n    }\n  };\n\n  return {\n    currentLanguage,\n    changeLanguage\n  };\n};\n\n_s(useLanguage, \"lIooPw/4+huLH2ieIDw/xjJXU10=\");\n\nexport default useLanguage;","map":{"version":3,"sources":["/home/revflash/mayankp291.github.io/src/hooks/useLanguage.js"],"names":["LANGUAGE","LanguageContext","i18n","useContext","useLanguage","currentLanguage","setCurrentLanguage","changeLanguage","language","EN","KO"],"mappings":";;AAAA,SAASA,QAAT,QAAyB,uBAAzB;AACA,SAASC,eAAT,QAAgC,4BAAhC;AACA,OAAOC,IAAP,MAAiB,cAAjB;AACA,SAASC,UAAT,QAA2B,OAA3B;;AAEA,MAAMC,WAAW,GAAG,MAAM;AAAA;;AACxB,QAAM;AAAEC,IAAAA,eAAF;AAAmBC,IAAAA;AAAnB,MAA0CH,UAAU,CAACF,eAAD,CAA1D;;AAEA,QAAMM,cAAc,GAAG,MAAM;AAC3B,QAAIL,IAAI,CAACM,QAAL,KAAkBR,QAAQ,CAACS,EAA/B,EAAmC;AACjCP,MAAAA,IAAI,CAACK,cAAL,CAAoBP,QAAQ,CAACU,EAA7B;AACAJ,MAAAA,kBAAkB,CAACN,QAAQ,CAACU,EAAV,CAAlB;AAEA;AACD;;AAED,QAAIR,IAAI,CAACM,QAAL,KAAkBR,QAAQ,CAACU,EAA/B,EAAmC;AACjCR,MAAAA,IAAI,CAACK,cAAL,CAAoBP,QAAQ,CAACS,EAA7B;AACAH,MAAAA,kBAAkB,CAACN,QAAQ,CAACS,EAAV,CAAlB;AAEA;AACD;AACF,GAdD;;AAgBA,SAAO;AAAEJ,IAAAA,eAAF;AAAmBE,IAAAA;AAAnB,GAAP;AACD,CApBD;;GAAMH,W;;AAsBN,eAAeA,WAAf","sourcesContent":["import { LANGUAGE } from '../constants/language';\nimport { LanguageContext } from '../context/languageContext';\nimport i18n from '../lang/i18n';\nimport { useContext } from 'react';\n\nconst useLanguage = () => {\n  const { currentLanguage, setCurrentLanguage } = useContext(LanguageContext);\n\n  const changeLanguage = () => {\n    if (i18n.language === LANGUAGE.EN) {\n      i18n.changeLanguage(LANGUAGE.KO);\n      setCurrentLanguage(LANGUAGE.KO);\n\n      return;\n    }\n\n    if (i18n.language === LANGUAGE.KO) {\n      i18n.changeLanguage(LANGUAGE.EN);\n      setCurrentLanguage(LANGUAGE.EN);\n\n      return;\n    }\n  };\n\n  return { currentLanguage, changeLanguage };\n};\n\nexport default useLanguage;\n"]},"metadata":{},"sourceType":"module"}